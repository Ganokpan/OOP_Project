
import java.awt.Color;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ASUS
 */
public class Graphh extends javax.swing.JFrame {

    //public int a = 50;
    static int total;
    Connection _connect = null;
    Statement _sql_statment = null;

    /**
     * Creates new form Graph
     */
    public Graphh() {

        initComponents();
        show_menu();
    }

    public ArrayList<MenuList> menuList() {
        ArrayList<MenuList> menuList = new ArrayList<>();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            _connect = DriverManager.getConnection("jdbc:mysql://localhost/oop"
                    + "?user=root&password=");

            if (_connect != null) {
                System.out.println("Database Connected.");
            } else {
                System.out.println("Database Connect Failed.");
            }

            String query1 = "SELECT * FROM datachicken";
            Statement st = _connect.createStatement();
            ResultSet rs = st.executeQuery(query1);
            /*MenuList MenuList;
            while (rs.next()) {
                MenuList = new MenuList(rs.getInt("friedchicken"), rs.getInt("cheesechicken"), rs.getInt("spicychicken"), rs.getInt("nuggets"), rs.getInt("frenchfries"), rs.getInt("berger"), rs.getInt("coke"), rs.getInt("pepsi"), rs.getInt("drink"));
                menuList.add(MenuList);

            }*/

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);

        }
        return menuList;
    }

    public void show_menu() {
        ArrayList<MenuList> list = menuList();
        /*DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object[] row = new Object[9];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getFriedchicken();
            row[1] = list.get(i).getCheesechicken();
            row[2] = list.get(i).getSpicychicken();
            row[3] = list.get(i).getNuggets();
            row[4] = list.get(i).getFrenchfries();
            row[5] = list.get(i).getBerger();
            row[6] = list.get(i).getCoke();
            row[7] = list.get(i).getPepsi();
            row[8] = list.get(i).getDrink();
            model.addRow(row);

        }*/
   

    }

    /* try {
            Class.forName("com.mysql.jdbc.Driver");
            _connect = DriverManager.getConnection("jdbc:mysql://localhost/oop"
                    + "?user=root&password=");

            if (_connect != null) {
                System.out.println("Database Connected.");
            } else {
                System.out.println("Database Connect Failed.");
            }

        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            System.out.println(e.toString());
        }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UP TO YOU - Graph ");
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icons.png")));
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBackground(new java.awt.Color(237, 171, 57));
        jPanel1.setMinimumSize(new java.awt.Dimension(771, 580));

        jButton1.setBackground(new java.awt.Color(255, 255, 141));
        jButton1.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jButton1.setText("ยอดขายทั้งหมด");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "กราฟแสดงยอดขายร้านไก่ทอด", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monospaced", 1, 17))); // NOI18N
        jPanel2.setMaximumSize(new java.awt.Dimension(12, 30));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jButton2.setBackground(new java.awt.Color(255, 255, 141));
        jButton2.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jButton2.setText("กลับหน้าหลัก");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 141));
        jButton3.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jButton3.setText("ยอดขายเครื่องดื่ม");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 141));
        jButton4.setFont(new java.awt.Font("Monospaced", 0, 15)); // NOI18N
        jButton4.setText("ยอดขายอาหาร");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 301, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel2.getAccessibleContext().setAccessibleName("");

        getContentPane().add(jPanel1);
        jPanel1.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        setDefaultCloseOperation(EXIT_ON_CLOSE);setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            _sql_statment = _connect.createStatement();
            String sql_commnad = "SELECT *, SUM(friedchicken),SUM(cheesechicken),SUM(spicychicken),SUM(nuggets),SUM(frenchfries),SUM(berger),SUM(coke),SUM(pepsi),SUM(drink)  FROM datachicken ";
            ResultSet rs = _sql_statment.executeQuery(sql_commnad);

            if (rs.next()) {
                int friedchicken = rs.getInt("SUM(friedchicken)");
                int cheesechicken = rs.getInt("SUM(cheesechicken)");
                int spicychicken = rs.getInt("SUM(spicychicken)");
                int nuggets = rs.getInt("SUM(nuggets)");
                int frenchfries = rs.getInt("SUM(frenchfries)");
                int berger = rs.getInt("SUM(berger)");
                int coke = rs.getInt("SUM(coke)");
                int pepsi = rs.getInt("SUM(pepsi)");
                int drink = rs.getInt("SUM(drink)");

                _sql_statment = _connect.createStatement();
                DefaultCategoryDataset dat = new DefaultCategoryDataset();
                dat.setValue(friedchicken, "อาหาร", "ไก่ทอด");
                dat.setValue(cheesechicken, "อาหาร", "ไก่ชีส");
                dat.setValue(spicychicken, "อาหาร", "ไก่วิ้งแซ่บ");
                dat.setValue(nuggets, "อาหาร", "นักเก็ตส์");
                dat.setValue(frenchfries, "อาหาร", "เฟรนฟราย");
                dat.setValue(berger, "อาหาร", "เบอร์เกอร์ไก่ทอด");
                dat.setValue(coke, "เครื่องดื่ม", "โค๊ก");
                dat.setValue(pepsi, "เครื่องดื่ม", "เป๊ปซี่");
                dat.setValue(drink, "เครื่องดื่ม", "น้ำเปล่า");

                JFreeChart jchart = ChartFactory.createBarChart3D("ยอดขายร้านไก่ทอด", "รายการอาหาร", "ยอดขาย(จาน/แก้ว)", dat, PlotOrientation.VERTICAL, true, true, false);

                CategoryPlot plot = jchart.getCategoryPlot();
                plot.setRangeMinorGridlinePaint(Color.darkGray);
                plot.setRangeGridlinePaint(Color.black);
                ChartFrame chartFrm = new ChartFrame("ยอดขายร้านไก่ทอด", jchart, true);
                //chartFrm.setVisible(true);
                chartFrm.setSize(500, 400);
                ChartPanel chartPanel = new ChartPanel(jchart);

                jPanel2.removeAll();
                jPanel2.add(chartPanel);
                jPanel2.updateUI();
            }

        } catch (Exception ex) {
            System.out.println(ex.toString());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            // TODO add your handling code here:
            _sql_statment = _connect.createStatement();

            String sql_commnad = "SELECT *,SUM(coke),SUM(pepsi),SUM(drink)  FROM datachicken ";
            ResultSet rs = _sql_statment.executeQuery(sql_commnad);

            if (rs.next()) {
                int coke = rs.getInt("SUM(coke)");
                int pepsi = rs.getInt("SUM(pepsi)");
                int drink = rs.getInt("SUM(drink)");

                _sql_statment = _connect.createStatement();
                DefaultCategoryDataset data = new DefaultCategoryDataset();
                data.setValue(coke, "เครื่องดื่ม", "โค้ก");
                data.setValue(pepsi, "เครื่องดื่ม", "เป๊ปซี่");
                data.setValue(drink, "เครื่องดื่ม", "น้ำเปล่า");

                JFreeChart jchart = ChartFactory.createBarChart3D("ยอดขายเครื่องดื่มร้านไก่ทอด", "รายการเครื่องดื่ม", "ยอดขาย(แก้ว)", data, PlotOrientation.VERTICAL, true, true, false);

                CategoryPlot plot = jchart.getCategoryPlot();
                plot.setRangeMinorGridlinePaint(Color.darkGray);
                plot.setRangeGridlinePaint(Color.black);
                ChartFrame chartFrm = new ChartFrame("ยอดขายเครื่องดื่มร้านไก่ทอด", jchart, true);
                //chartFrm.setVisible(true);
                chartFrm.setSize(500, 400);
                ChartPanel chartPanel = new ChartPanel(jchart);

                jPanel2.removeAll();
                jPanel2.add(chartPanel);
                jPanel2.updateUI();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Graphh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            _sql_statment = _connect.createStatement();

            String sql_commnad = "SELECT *, SUM(friedchicken),SUM(cheesechicken),SUM(spicychicken),SUM(nuggets),SUM(frenchfries),SUM(berger)  FROM datachicken ";
            ResultSet rs = _sql_statment.executeQuery(sql_commnad);

            if (rs.next()) {
                int friedchicken = rs.getInt("SUM(friedchicken)");
                int cheesechicken = rs.getInt("SUM(cheesechicken)");
                int spicychicken = rs.getInt("SUM(spicychicken)");
                int nuggets = rs.getInt("SUM(nuggets)");
                int frenchfries = rs.getInt("SUM(frenchfries)");
                int berger = rs.getInt("SUM(berger)");

                _sql_statment = _connect.createStatement();
                DefaultCategoryDataset dat = new DefaultCategoryDataset();
                dat.setValue(friedchicken, "อาหาร", "ไก่ทอด");
                dat.setValue(cheesechicken, "อาหาร", "ไก่ชีส");
                dat.setValue(spicychicken, "อาหาร", "ไก่วิ้งแซ่บ");
                dat.setValue(nuggets, "อาหาร", "นักเก็ตส์");
                dat.setValue(frenchfries, "อาหาร", "เฟรนฟราย");
                dat.setValue(berger, "อาหาร", "เบอร์เกอร์ไก่ทอด");

                JFreeChart jchart = ChartFactory.createBarChart3D("ยอดขายร้านไก่ทอด", "รายการอาหาร", "ยอดขาย(จาน/แก้ว)", dat, PlotOrientation.VERTICAL, true, true, false);

                CategoryPlot plot = jchart.getCategoryPlot();
                plot.setRangeMinorGridlinePaint(Color.darkGray);
                plot.setRangeGridlinePaint(Color.black);
                ChartFrame chartFrm = new ChartFrame("ยอดขายร้านไก่ทอด", jchart, true);
                //chartFrm.setVisible(true);
                chartFrm.setSize(500, 400);
                ChartPanel chartPanel = new ChartPanel(jchart);

                jPanel2.removeAll();
                jPanel2.add(chartPanel);
                jPanel2.updateUI();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Graphh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Graphh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Graphh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Graphh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Graphh.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Graphh().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}

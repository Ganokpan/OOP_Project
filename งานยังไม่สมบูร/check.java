
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User
 */
public class check extends javax.swing.JFrame {

    /**
     * Creates new form check
     */
    Connection _connect = null;
    Statement _sql_statment = null;

    public check() {
        initComponents();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            _connect = DriverManager.getConnection("jdbc:mysql://localhost/oop"
                    + "?user=root&password=");

            if (_connect != null) {
                System.out.println("Database Connected.");
            } else {
                System.out.println("Database Connect Failed.");
            }

        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            System.out.println(e.toString());

        }
        int price;
        int points;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(218, 77, 79));

        jPanel2.setBackground(new java.awt.Color(250, 236, 201));

        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        jLabel1.setText("คุณมีแต้มสะสมถึง");

        jLabel3.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        jLabel3.setText("แต้ม");

        jLabel4.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        jLabel4.setText("สามารถนำมาใช้เป็นส่วนลดได้");

        jButton1.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        jButton1.setText("ยืนยัน");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        jButton2.setText("ยกเลิก");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Monospaced", 1, 17)); // NOI18N
        jLabel6.setText("โปรโมชั่นสะสมแต้ม");

        jLabel8.setFont(new java.awt.Font("Monospaced", 0, 17)); // NOI18N
        jLabel8.setText("%");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(22, 22, 22)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addGap(6, 6, 6)))))
                .addGap(28, 28, 28))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(118, 118, 118))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel6)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        suc1 Suc = new suc1();//ไม่ใช้
        Suc.setVisible(true);

        if (!(Menu2.Numchick.getText()).equals("")) {
            String data[] = {"ไก่ทอด", Menu2.Numchick.getText(), "60", String.format("%d", (Integer.parseInt(Menu2.Numchick.getText())) * 60)};
            DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable1.getModel();
            tbm1.addRow(data);
        }
        if (!(Menu2.Numcheese.getText()).equals("")) {
            String data[] = {"ไก่ชีส", Menu2.Numcheese.getText(), "100", String.format("%d", (Integer.parseInt(Menu2.Numcheese.getText())) * 100)};
            DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable1.getModel();
            tbm1.addRow(data);
        }
        if (!(Menu2.NumZeed.getText()).equals("")) {
            String data[] = {"ไก่วิ้งแซ่บ", Menu2.NumZeed.getText(), "80", String.format("%d", (Integer.parseInt(Menu2.NumZeed.getText())) * 80)};
            DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable1.getModel();
            tbm1.addRow(data);
        }
        if (!(Menu2.NumNug.getText()).equals("")) {
            String data[] = {"นักเก็ตส์", Menu2.NumNug.getText(), "35", String.format("%d", (Integer.parseInt(Menu2.NumNug.getText())) * 35)};
            DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable1.getModel();
            tbm1.addRow(data);
        }
        if (!(Menu2.Numpotato.getText()).equals("")) {
            String data[] = {"เฟรนฟราย", Menu2.Numpotato.getText(), "45", String.format("%d", (Integer.parseInt(Menu2.Numpotato.getText())) * 45)};
            DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable1.getModel();
            tbm1.addRow(data);
        }
        if (!(Menu2.NumBerger.getText()).equals("")) {
            String data[] = {"เบอร์เกอร์ไก่ทอด", Menu2.NumBerger.getText(), "79", String.format("%d", (Integer.parseInt(Menu2.NumBerger.getText())) * 79)};
            DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable1.getModel();
            tbm1.addRow(data);
        }
        if (!(Menu2.Numcola.getText()).equals("")) {
            String data[] = {"โค้ก", Menu2.Numcola.getText(), "40", String.format("%d", (Integer.parseInt(Menu2.Numcola.getText())) * 40)};
            DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable1.getModel();
            tbm1.addRow(data);
        }
        if (!(Menu2.Numpepsi.getText()).equals("")) {
            String data[] = {"เป๊ปซี่", Menu2.Numpepsi.getText(), "40", String.format("%d", (Integer.parseInt(Menu2.Numpepsi.getText())) * 40)};
            DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable1.getModel();
            tbm1.addRow(data);
        }
        if (!(Menu2.Numwater.getText()).equals("")) {
            String data[] = {"น้ำเปล่า", Menu2.Numwater.getText(), "15", String.format("%d", (Integer.parseInt(Menu2.Numwater.getText())) * 15)};
            DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable1.getModel();
            tbm1.addRow(data);
        }

        Menu1 priceno = new Menu1();
        String total2 = Double.toString(priceno.total);
        Suc.price.setText(total2);
        Suc.jTable1.setEnabled(false);

        Suc.jTable1.getColumnModel().getColumn(0).setPreferredWidth(170);
        Suc.setResizable(false);
        Suc.setVisible(true);
        Suc.pack();
        Suc.setLocationRelativeTo(null);
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        suc2 Suc = new suc2();//ใช้
        Suc.setVisible(true);

        try {

            Menu2 pricec = new Menu2();
            int pd = -300;
            int p = -500;
            int i = pricec.total;
            int j = Integer.parseInt(jLabel2.getText());
            System.out.println(jLabel2.getText());
            System.out.println(j);
            if (j >= 300) {
                if (j >= 300 && j < 500) {
                    double p1 = 0.05 * i;
                    double total1 = i - p1;
                    _sql_statment = _connect.createStatement();

                    String sql_commnad = "INSERT INTO datachicken (pointmember,firstname,telephone) VALUES ( '" + pd + "','" + Name1.getText() + "','" + telephone.getText() + "') ";
                    _sql_statment.execute(sql_commnad);
                    System.out.println("save data complete");
                    //ถ้าแต้มถึงให้ลิงค์ไปหน้าcheckpro

                    if (!(Menu2.Numchick.getText()).equals("")) {
                        String data[] = {"ไก่ทอด", Menu2.Numchick.getText(), "60", String.format("%d", (Integer.parseInt(Menu2.Numchick.getText())) * 60)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numcheese.getText()).equals("")) {
                        String data[] = {"ไก่ชีส", Menu2.Numcheese.getText(), "100", String.format("%d", (Integer.parseInt(Menu2.Numcheese.getText())) * 100)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.NumZeed.getText()).equals("")) {
                        String data[] = {"ไก่วิ้งแซ่บ", Menu2.NumZeed.getText(), "80", String.format("%d", (Integer.parseInt(Menu2.NumZeed.getText())) * 80)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.NumNug.getText()).equals("")) {
                        String data[] = {"นักเก็ตส์", Menu2.NumNug.getText(), "35", String.format("%d", (Integer.parseInt(Menu2.NumNug.getText())) * 35)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numpotato.getText()).equals("")) {
                        String data[] = {"เฟรนฟราย", Menu2.Numpotato.getText(), "45", String.format("%d", (Integer.parseInt(Menu2.Numpotato.getText())) * 45)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.NumBerger.getText()).equals("")) {
                        String data[] = {"เบอร์เกอร์ไก่ทอด", Menu2.NumBerger.getText(), "79", String.format("%d", (Integer.parseInt(Menu2.NumBerger.getText())) * 79)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numcola.getText()).equals("")) {
                        String data[] = {"โค้ก", Menu2.Numcola.getText(), "40", String.format("%d", (Integer.parseInt(Menu2.Numcola.getText())) * 40)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numpepsi.getText()).equals("")) {
                        String data[] = {"เป๊ปซี่", Menu2.Numpepsi.getText(), "40", String.format("%d", (Integer.parseInt(Menu2.Numpepsi.getText())) * 40)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numwater.getText()).equals("")) {
                        String data[] = {"น้ำเปล่า", Menu2.Numwater.getText(), "15", String.format("%d", (Integer.parseInt(Menu2.Numwater.getText())) * 15)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }

                    Suc.jTable2.setEnabled(false);

                    Suc.jTable2.getColumnModel().getColumn(0).setPreferredWidth(170);
                    Suc.setResizable(false);
                    Suc.setVisible(true);
                    Suc.pack();
                    Suc.setLocationRelativeTo(null);


                    Suc.pointused.setText("300");
                    Suc.pointUsed.setText(p1 + " ");
                    Suc.price.setText(total1 + " ");
                    setVisible(false);
                    System.out.println("ออกก300");

                } else if (j >= 500) {
                    double p1 = 0.1 * i;
                    double total1 = i - p1;

                    _sql_statment = _connect.createStatement();

                    String sql_commnad = "INSERT INTO datachicken (pointmember,firstname,telephone) VALUES ( '" + p + "','" + Name1.getText() + "','" + telephone.getText() + "') ";
                    _sql_statment.execute(sql_commnad);
                    System.out.println("save data complete");
                    //ถ้าแต้มถึงให้ลิงค์ไปหน้าcheckpro

                    if (!(Menu2.Numchick.getText()).equals("")) {
                        String data[] = {"ไก่ทอด", Menu2.Numchick.getText(), "60", String.format("%d", (Integer.parseInt(Menu2.Numchick.getText())) * 60)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numcheese.getText()).equals("")) {
                        String data[] = {"ไก่ชีส", Menu2.Numcheese.getText(), "100", String.format("%d", (Integer.parseInt(Menu2.Numcheese.getText())) * 100)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.NumZeed.getText()).equals("")) {
                        String data[] = {"ไก่วิ้งแซ่บ", Menu2.NumZeed.getText(), "80", String.format("%d", (Integer.parseInt(Menu2.NumZeed.getText())) * 80)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.NumNug.getText()).equals("")) {
                        String data[] = {"นักเก็ตส์", Menu2.NumNug.getText(), "35", String.format("%d", (Integer.parseInt(Menu2.NumNug.getText())) * 35)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numpotato.getText()).equals("")) {
                        String data[] = {"เฟรนฟราย", Menu2.Numpotato.getText(), "45", String.format("%d", (Integer.parseInt(Menu2.Numpotato.getText())) * 45)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.NumBerger.getText()).equals("")) {
                        String data[] = {"เบอร์เกอร์ไก่ทอด", Menu2.NumBerger.getText(), "79", String.format("%d", (Integer.parseInt(Menu2.NumBerger.getText())) * 79)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numcola.getText()).equals("")) {
                        String data[] = {"โค้ก", Menu2.Numcola.getText(), "40", String.format("%d", (Integer.parseInt(Menu2.Numcola.getText())) * 40)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numpepsi.getText()).equals("")) {
                        String data[] = {"เป๊ปซี่", Menu2.Numpepsi.getText(), "40", String.format("%d", (Integer.parseInt(Menu2.Numpepsi.getText())) * 40)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }
                    if (!(Menu2.Numwater.getText()).equals("")) {
                        String data[] = {"น้ำเปล่า", Menu2.Numwater.getText(), "15", String.format("%d", (Integer.parseInt(Menu2.Numwater.getText())) * 15)};
                        DefaultTableModel tbm1 = (DefaultTableModel) Suc.jTable2.getModel();
                        tbm1.addRow(data);
                    }

                    Suc.jTable2.setEnabled(false);

                    Suc.jTable2.getColumnModel().getColumn(0).setPreferredWidth(170);
                    Suc.setResizable(false);
                    Suc.setVisible(true);
                    Suc.pack();
                    Suc.setLocationRelativeTo(null);

                    
                    System.out.println(total1);
                    String pointt = "500";
                    Suc.pointused.setText(pointt);
                    Suc.pointUsed.setText(p1 + " ");
                    Suc.setVisible(true);
                    setVisible(false);
                    Suc.price.setText(total1 + " ");
                    System.out.println("ออกก500");

                }
            }

        } catch (Exception ex) {
            System.out.println(ex.toString());
            System.out.println("noooooooo data");
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(check.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new check().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
